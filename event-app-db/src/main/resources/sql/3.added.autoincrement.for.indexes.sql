CREATE SEQUENCE AUTHORITY_SEQ
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER AUTHORITY_TRG
BEFORE INSERT ON AUTHORITY
 FOR EACH ROW
  WHEN (new.id IS NULL)
 BEGIN
  SELECT AUTHORITY_SEQ.NEXTVAL
 INTO   :new.id
 FROM   dual;
END;
/
CREATE SEQUENCE COMMENTARY_SEQ
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER COMMENTARY_TRG
BEFORE INSERT ON COMMENTARY
 FOR EACH ROW
  WHEN (new.id IS NULL)
 BEGIN
  SELECT COMMENTARY_SEQ.NEXTVAL
 INTO   :new.id
 FROM   dual;
END;
/
CREATE SEQUENCE EVENT_SEQ
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER EVENT_TRG
BEFORE INSERT ON EVENT
 FOR EACH ROW
  WHEN (new.id IS NULL)
 BEGIN
  SELECT EVENT_SEQ.NEXTVAL
 INTO   :new.id
 FROM   dual;
END;
/
CREATE SEQUENCE PHOTO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER PHOTO_TRG
BEFORE INSERT ON PHOTO
 FOR EACH ROW
  WHEN (new.id IS NULL)
 BEGIN
  SELECT PHOTO_SEQ.NEXTVAL
 INTO   :new.id
 FROM   dual;
END;
/
CREATE SEQUENCE SEC_USER_SEQ
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER SEC_USER_TRG
BEFORE INSERT ON SEC_USER
 FOR EACH ROW
  WHEN (new.id IS NULL)
 BEGIN
  SELECT SEC_USER_SEQ.NEXTVAL
 INTO   :new.id
 FROM   dual;
END;
/
CREATE SEQUENCE TAG_SEQ
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TAG_TRG
BEFORE INSERT ON TAG
 FOR EACH ROW
  WHEN (new.id IS NULL)
 BEGIN
  SELECT TAG_SEQ.NEXTVAL
 INTO   :new.id
 FROM   dual;
END;
/
CREATE SEQUENCE VIDEO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER VIDEO_TRG
BEFORE INSERT ON VIDEO
 FOR EACH ROW
  WHEN (new.id IS NULL)
 BEGIN
  SELECT VIDEO_SEQ.NEXTVAL
 INTO   :new.id
 FROM   dual;
END;

